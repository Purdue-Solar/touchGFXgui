/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LUX_DISPLAYVIEWBASE_HPP
#define LUX_DISPLAYVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/lux_display_screen/LUX_DISPLAYPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/containers/progress_indicators/TextProgress.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>

class LUX_DISPLAYViewBase : public touchgfx::View<LUX_DISPLAYPresenter>
{
public:
    LUX_DISPLAYViewBase();
    virtual ~LUX_DISPLAYViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage3_1;
    touchgfx::Container warningContainer;
    touchgfx::Box warningBackground;
    touchgfx::Line line2_1;
    touchgfx::PainterRGB888 line2_1Painter;
    touchgfx::Line line2_1_2;
    touchgfx::PainterRGB888 line2_1_2Painter;
    touchgfx::Container warning1container;
    touchgfx::TextArea warning1;
    touchgfx::Container warning2container;
    touchgfx::TextArea warning2;
    touchgfx::Container warning3container;
    touchgfx::TextArea warning3;
    touchgfx::Container clockcontainer;
    touchgfx::Box clockbox;
    touchgfx::DigitalClock digitalClock;
    touchgfx::Container errorcontainer;
    touchgfx::Box errorbackground;
    touchgfx::TextArea errortext;
    touchgfx::Container MPH_AMP;
    touchgfx::Container Ampcontainer;
    touchgfx::TextProgress Amps;
    touchgfx::TextArea Amptext;
    touchgfx::Container MPHcontainer;
    touchgfx::TextProgress MPH;
    touchgfx::TextArea MPHtext;
    touchgfx::Container tempcontainer;
    touchgfx::Container cabintempcontainer;
    touchgfx::TextProgress cabintext;
    touchgfx::TextArea cabintemptext;
    touchgfx::Container batterytempcontainer;
    touchgfx::TextProgress batterytext;
    touchgfx::TextArea batterytemptext;
    touchgfx::Container gearcontainer;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB888 circle1Painter;
    touchgfx::Shape<6> rightindicator;
    touchgfx::PainterRGB888 rightindicatorPainter;
    touchgfx::Shape<6> leftindicator;
    touchgfx::PainterRGB888 leftindicatorPainter;
    touchgfx::TextArea Gear;
    touchgfx::Container currentcontainer;
    touchgfx::Container solarcurrentcontainer;
    touchgfx::TextProgress solarcurrent;
    touchgfx::TextArea solarcurrenttext;
    touchgfx::Container batterycurrentcontainer;
    touchgfx::TextProgress batterycurrent;
    touchgfx::TextArea batterycurrenttext;
    touchgfx::Container chargecontainer;
    touchgfx::Box chargebox;
    touchgfx::TextArea chargetext;
    touchgfx::Container SOCcontainer;
    touchgfx::Box SOCbox;
    touchgfx::TextArea SOCtext;
    touchgfx::Container totalmilescontainer;
    touchgfx::Box totalmilesbox;
    touchgfx::TextArea totalmilestext;
    touchgfx::Container voltagecontainer;
    touchgfx::Box voltagebox;
    touchgfx::TextArea voltagetext;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // LUX_DISPLAYVIEWBASE_HPP
