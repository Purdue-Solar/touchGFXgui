/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/lux_display_screen/LUX_DISPLAYViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LUX_DISPLAYViewBase::LUX_DISPLAYViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 854, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage3_1.setBitmap(touchgfx::Bitmap(BITMAP_BLANK_WHITE_7SN5O1WOONMKLX1H_ID));
    scalableImage3_1.setPosition(0, 0, 854, 479);
    scalableImage3_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage3_1);

    warningContainer.setPosition(208, 263, 439, 148);
    warningBackground.setPosition(0, 35, 439, 113);
    warningBackground.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    warningContainer.add(warningBackground);

    line2_1.setPosition(145, 36, 15, 183);
    line2_1Painter.setColor(touchgfx::Color::getColorFromRGB(150, 143, 143));
    line2_1.setPainter(line2_1Painter);
    line2_1.setStart(0, 110);
    line2_1.setEnd(0, 0);
    line2_1.setLineWidth(5.9f);
    line2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    warningContainer.add(line2_1);

    line2_1_2.setPosition(297, 35, 15, 183);
    line2_1_2Painter.setColor(touchgfx::Color::getColorFromRGB(150, 143, 143));
    line2_1_2.setPainter(line2_1_2Painter);
    line2_1_2.setStart(0, 110);
    line2_1_2.setEnd(0, 0);
    line2_1_2.setLineWidth(5.9f);
    line2_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    warningContainer.add(line2_1_2);

    warning1container.setPosition(0, 35, 145, 113);
    warning1.setPosition(6, 9, 133, 98);
    warning1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    warning1.setLinespacing(0);
    warning1.setWideTextAction(WIDE_TEXT_WORDWRAP);
    warning1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8F3V));
    warning1container.add(warning1);

    warningContainer.add(warning1container);

    warning2container.setPosition(147, 36, 145, 113);
    warning2.setPosition(3, 8, 142, 98);
    warning2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    warning2.setLinespacing(0);
    warning2.setWideTextAction(WIDE_TEXT_WORDWRAP);
    warning2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2ZI));
    warning2container.add(warning2);

    warningContainer.add(warning2container);

    warning3container.setPosition(297, 35, 145, 113);
    warning3.setPosition(3, 8, 139, 99);
    warning3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    warning3.setLinespacing(0);
    warning3.setWideTextAction(WIDE_TEXT_WORDWRAP);
    warning3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RSHH));
    warning3container.add(warning3);

    warningContainer.add(warning3container);

    add(warningContainer);

    clockcontainer.setPosition(722, 1, 132, 92);
    clockbox.setPosition(16, 9, 99, 43);
    clockbox.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    clockcontainer.add(clockbox);

    digitalClock.setPosition(28, 16, 81, 29);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85UD));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);
    clockcontainer.add(digitalClock);

    add(clockcontainer);

    errorcontainer.setPosition(168, 53, 544, 101);
    errorbackground.setPosition(15, 17, 488, 47);
    errorbackground.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    errorcontainer.add(errorbackground);

    errortext.setXY(84, 22);
    errortext.setColor(touchgfx::Color::getColorFromRGB(255, 5, 5));
    errortext.setLinespacing(0);
    errortext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EDI9));
    errorcontainer.add(errortext);

    add(errorcontainer);

    MPH_AMP.setPosition(201, 124, 464, 161);
    Ampcontainer.setPosition(243, 1, 213, 173);
    Amps.setXY(15, 29);
    Amps.setProgressIndicatorPosition(12, -5, 150, 60);
    Amps.setRange(0, 100);
    Amps.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Amps.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NGHV));
    Amps.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    Amps.setValue(0);
    Ampcontainer.add(Amps);

    Amptext.setXY(93, 108);
    Amptext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Amptext.setLinespacing(0);
    Amptext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_46HA));
    Ampcontainer.add(Amptext);

    MPH_AMP.add(Ampcontainer);

    MPHcontainer.setPosition(51, 13, 155, 146);
    MPH.setXY(-10, 17);
    MPH.setProgressIndicatorPosition(12, -5, 150, 60);
    MPH.setRange(0, 100);
    MPH.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MPH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HTEH));
    MPH.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    MPH.setValue(0);
    MPHcontainer.add(MPH);

    MPHtext.setXY(41, 96);
    MPHtext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MPHtext.setLinespacing(0);
    MPHtext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K3KX));
    MPHcontainer.add(MPHtext);

    MPH_AMP.add(MPHcontainer);

    add(MPH_AMP);

    tempcontainer.setPosition(12, 125, 181, 253);
    cabintempcontainer.setPosition(-12, 138, 191, 135);
    cabintext.setXY(8, -2);
    cabintext.setProgressIndicatorPosition(12, 10, 150, 30);
    cabintext.setRange(0, 100);
    cabintext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cabintext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HETC));
    cabintext.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    cabintext.setValue(0);
    cabintempcontainer.add(cabintext);

    cabintemptext.setXY(56, 50);
    cabintemptext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cabintemptext.setLinespacing(0);
    cabintemptext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8UK));
    cabintempcontainer.add(cabintemptext);

    tempcontainer.add(cabintempcontainer);

    batterytempcontainer.setPosition(-9, -1, 199, 157);
    batterytext.setXY(8, 20);
    batterytext.setProgressIndicatorPosition(12, 10, 150, 30);
    batterytext.setRange(0, 100);
    batterytext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    batterytext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D5TY));
    batterytext.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    batterytext.setValue(0);
    batterytempcontainer.add(batterytext);

    batterytemptext.setXY(49, 76);
    batterytemptext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    batterytemptext.setLinespacing(0);
    batterytemptext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3W1D));
    batterytempcontainer.add(batterytemptext);

    tempcontainer.add(batterytempcontainer);

    add(tempcontainer);

    gearcontainer.setPosition(302, 1, 254, 74);
    circle1.setPosition(91, -9, 81, 78);
    circle1.setCenter(40, 40);
    circle1.setRadius(26);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFromRGB(86, 188, 214));
    circle1.setPainter(circle1Painter);
    circle1.setAlpha(167);
    gearcontainer.add(circle1);

    rightindicator.setPosition(188, 11, 42, 41);
    rightindicator.setOrigin(5.0f, 5.0f);
    rightindicator.setScale(1.3f, 1.0f);
    rightindicator.setAngle(65.0f);
    rightindicatorPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    rightindicator.setPainter(rightindicatorPainter);
    const touchgfx::AbstractShape::ShapePoint<float> rightindicatorPoints[6] = { { 20.0f, 20.0f }, { 20.0f, 20.0f }, { 20.0f, 30.0f }, { -8.0f, 10.0f }, { 20.0f, -20.0f }, { 20.0f, -20.0f } };
    rightindicator.setShape(rightindicatorPoints);
    gearcontainer.add(rightindicator);

    leftindicator.setPosition(43, 14, 48, 34);
    leftindicator.setOrigin(10.0f, 7.0f);
    leftindicator.setScale(1.1f, 0.9f);
    leftindicator.setAngle(0.0f);
    leftindicatorPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    leftindicator.setPainter(leftindicatorPainter);
    const touchgfx::AbstractShape::ShapePoint<float> leftindicatorPoints[6] = { { 20.0f, 20.0f }, { 20.0f, 125.0f }, { 20.0f, 30.0f }, { -8.0f, 10.0f }, { 20.0f, -10.0f }, { 20.0f, -120.0f } };
    leftindicator.setShape(leftindicatorPoints);
    gearcontainer.add(leftindicator);

    Gear.setXY(120, 11);
    Gear.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Gear.setLinespacing(0);
    Gear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_44KF));
    gearcontainer.add(Gear);

    add(gearcontainer);

    currentcontainer.setPosition(665, 124, 189, 254);
    solarcurrentcontainer.setPosition(15, 124, 159, 130);
    solarcurrent.setXY(-8, 3);
    solarcurrent.setProgressIndicatorPosition(12, 10, 150, 30);
    solarcurrent.setRange(0, 100);
    solarcurrent.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarcurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R4B2));
    solarcurrent.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    solarcurrent.setValue(0);
    solarcurrentcontainer.add(solarcurrent);

    solarcurrenttext.setXY(42, 60);
    solarcurrenttext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarcurrenttext.setLinespacing(0);
    solarcurrenttext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N8FZ));
    solarcurrentcontainer.add(solarcurrenttext);

    currentcontainer.add(solarcurrentcontainer);

    batterycurrentcontainer.setPosition(6, 0, 176, 116);
    batterycurrent.setXY(0, 12);
    batterycurrent.setProgressIndicatorPosition(12, 10, 150, 30);
    batterycurrent.setRange(0, 100);
    batterycurrent.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    batterycurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UPUI));
    batterycurrent.setBackground(touchgfx::Bitmap(BITMAP_AFEJASEIFJJ_ID));
    batterycurrent.setValue(0);
    batterycurrentcontainer.add(batterycurrent);

    batterycurrenttext.setXY(41, 68);
    batterycurrenttext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    batterycurrenttext.setLinespacing(0);
    batterycurrenttext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IM42));
    batterycurrentcontainer.add(batterycurrenttext);

    currentcontainer.add(batterycurrentcontainer);

    add(currentcontainer);

    chargecontainer.setPosition(0, 0, 156, 75);
    chargebox.setPosition(12, 8, 103, 43);
    chargebox.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    chargecontainer.add(chargebox);

    chargetext.setXY(32, 17);
    chargetext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    chargetext.setLinespacing(0);
    chargetext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JXW1));
    chargecontainer.add(chargetext);

    add(chargecontainer);

    SOCcontainer.setPosition(2, 405, 181, 74);
    SOCbox.setPosition(10, 11, 144, 52);
    SOCbox.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    SOCcontainer.add(SOCbox);

    SOCtext.setXY(53, 19);
    SOCtext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    SOCtext.setLinespacing(0);
    SOCtext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R6YM));
    SOCcontainer.add(SOCtext);

    add(SOCcontainer);

    totalmilescontainer.setPosition(309, 416, 248, 58);
    totalmilesbox.setPosition(44, 6, 152, 44);
    totalmilesbox.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    totalmilescontainer.add(totalmilesbox);

    totalmilestext.setXY(100, 8);
    totalmilestext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    totalmilestext.setLinespacing(0);
    totalmilestext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2SG));
    totalmilescontainer.add(totalmilestext);

    add(totalmilescontainer);

    voltagecontainer.setPosition(683, 405, 164, 69);
    voltagebox.setPosition(10, 11, 144, 50);
    voltagebox.setColor(touchgfx::Color::getColorFromRGB(224, 224, 224));
    voltagecontainer.add(voltagebox);

    voltagetext.setXY(53, 18);
    voltagetext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    voltagetext.setLinespacing(0);
    voltagetext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZKF6));
    voltagecontainer.add(voltagetext);

    add(voltagecontainer);
}

LUX_DISPLAYViewBase::~LUX_DISPLAYViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void LUX_DISPLAYViewBase::setupScreen()
{

}

void LUX_DISPLAYViewBase::handleKeyEvent(uint8_t key)
{
    if(2 == key)
    {
        //Left_Blinker
        //When hardware button 2 clicked change color of leftindicator
        //Set RGB color R:255, G:255, B:0 on leftindicator
        leftindicatorPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
        leftindicator.invalidate();
    
    }

    if(3 == key)
    {
        //Right_blinker
        //When hardware button 3 clicked change color of rightindicator
        //Set RGB color R:0, G:0, B:0 on rightindicator
        rightindicatorPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
        rightindicator.invalidate();
    
    }
}
